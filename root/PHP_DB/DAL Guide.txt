=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
About our new DAL layer object.
-------------------------------
by Andy				   27/03/14

There was a need to abstract our database queries from the GUI, and use the PDO 
and prepared statements for security and stability.
It will now be much easier to code new GUI sections.
It can also be used in the web service.
I've designed it a bit like a OOP style plugin. To use it we will create and call 
on our "data" object.
I will continue to add functionality to this layer as we progress.


=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
How to use our new DAL layer object.
------------------------------------

FILE GUIDE:

	dbObject.php - Data container class and derived table classes (this is what you import)
	dbCondet.php - Static class with the database connection details.
	dbtable.php  - base class
	
	All other files in the PHP_DB folder are now redundant.

SETUP GUIDE:

	include these two lines in your code to make our data object:
	
	require "PHP_DB/dbObject.php";
	$data = new Data();

METHOD GUIDE: (replace "conference" with your table)

Annotation key:
	[] Square brackets denotes optional arguments.
	() datatype after the method name is the return type.

METADATA:

$data->conference->getRowCount() (int) 
	Returns the number of rows in a table.
	
$data->conference->getColCount() (int) 
	Returns the number of columns for a table.
	
$data->conference->getColumnName($index) (string)
	Returns the column name of the 0-indexed column
	
$data->conference->getColumnNames() (array of strings)
	Returns a plain array with all the column names in order.
	

CRUD:

$data->conference->getRow([$id]) (2D or 1D array of pdo data)
	If an id is supplied, returns a 1D assoc array of a row.
	If no id is supplied or the string "all" is used, returns a 2D array 
	of all the rows in the table.
	
$data->conference->getRowByMatch($colname, $value) (2D assoc array)
	Used for foreign key match tables (like selecting a group of sessions from a section)
	$colname is the column name.
	$value is the value you want to match.	
	
$data->conference->updateRow($id, $data) (boolean)
	Updates a row with new data supplied in associative array form.
	Doesn't need all the columns, just the required ones.

$data->conference->addRow($data) (boolean)
	Adds a new row into the database with new data supplied in associative array form.
	Doesn't need all the columns, just the required ones.

$data->conference->deleteRow($id) (boolean)
	Deletes a row.

HELPERS:

$data->conference->rowExistsById($id) (boolean)
	Returns true if a row with the supplied ID exists.

$data->conference->printDebugTable([$id]) (void)
	echos a HTML table of all table data (can select a single row)

$data->conference->printDropDownOptions( [$selectedID, $columnName, $columnName...] ) (void)
	echo a set of <option> tags to select a row from this table.  the value of each option will be the key.

